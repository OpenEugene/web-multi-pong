@page "/pong-multi"

@inject GameManager gameManager
<h1>Pong Multiplayer</h1>

<style>

    .court {
        background-color: black;
        width: 600px;
        height: 400px;
        position: relative;
    }

    .left {
        background-color: crimson;
    }

    .right {
        background-color: cyan;
    }
</style>

<div class="court">
    <PaddleSprite Sprite="@leftPaddleSprite" Class="left" />
    <PaddleSprite Sprite="@rightPaddleSprite" Class="right" />
    <BallSpriteVector Sprite="@ballSprite" />
</div>

<div style="width: 600px;">
    <div style="float: left">
        <button class="btn btn-primary" @onclick="LeftUp">Up</button>
        <button class="btn btn-primary" @onclick="LeftDown">Down</button>
    </div>
    <div style="float: right">
        <button class="btn btn-primary" @onclick="RightUp">Up</button>
        <button class="btn btn-primary" @onclick="RightDown">Down</button>
    </div>
    <div style="text-align: center">
        <button class="btn btn-primary" @onclick="Faster">Faster</button>
        <button class="btn btn-primary" @onclick="Reset">Reset</button>
        <button class="btn btn-primary" @onclick="Slower">Slower</button>
    </div>
</div>
@code {

    Sprite ballSprite, leftPaddleSprite, rightPaddleSprite;


    private void LeftUp()
    {
        leftPaddleSprite.Direction = 180;
        leftPaddleSprite.Speed = 5;
    }

    private void LeftDown()
    {
        leftPaddleSprite.Direction = 0;
        leftPaddleSprite.Speed = 5;
    }

    private void RightUp()
    {
        rightPaddleSprite.Direction = 180;
        rightPaddleSprite.Speed = 5;
    }

    private void RightDown()
    {
        rightPaddleSprite.Direction = 0;
        rightPaddleSprite.Speed = 5;
    }

    private void Faster()
    {
        ballSprite.Speed++;
    }

    private void Slower()
    {
        ballSprite.Speed--;
    }

    private void Reset()
    {
        ballSprite.Box.Top = 200;
        ballSprite.Box.Left = 300;
    }

    protected override void OnInitialized()
    {
        ballSprite = gameManager.Sprites.FirstOrDefault(s => s.Id == "ballSprite");
        if (ballSprite == null)
        {
            ballSprite = new Sprite
            {
                Id = "ballSprite",
                Box = new Box
                {
                    Top = 200,
                    Left = 300,
                    Height = 25,
                    Width = 25
                },
                Direction = -120,
                Speed = 5

            };
            gameManager.AddSprite(ballSprite);
        }

        // look for paddle sprites
        leftPaddleSprite = gameManager.Sprites.FirstOrDefault(s => s.Id == "leftPaddleSprite");
        if (leftPaddleSprite == null)
        {
            leftPaddleSprite = new Sprite
            {
                Id = "leftPaddleSprite",
                Box = new Box
                {
                    Height = 100,
                    Width = 25
                }

            };
            gameManager.AddSprite(leftPaddleSprite);

        }

        rightPaddleSprite = gameManager.Sprites.FirstOrDefault(s => s.Id == "rightPaddleSprite");
        if (rightPaddleSprite == null)
        {
            rightPaddleSprite = new Sprite
            {
                Id = "rightPaddleSprite",
                Box = new Box
                {
                    Left = 575,
                    Height = 100,
                    Width = 25
                }

            };
            gameManager.AddSprite(rightPaddleSprite);

        }

        gameManager.Bounds = new Box { Width = 600, Height = 400 };

        if (!gameManager.IsAwake)
        {
            gameManager.Awake();
        }
    }


}