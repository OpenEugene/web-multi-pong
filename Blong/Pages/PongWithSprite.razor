@page "/pong-sprite"
@using Blong.Data
@using System.Threading;

<h1>Pong Ball as Sprite</h1>

<style>

    .paddle {
        width: 25px;
        height: 100px;
    }

    .court {
        background-color: black;
        width: 600px;
        height: 400px;
        position: relative;
    }

    .left {
        background-color: crimson;
        float: left;
        position: relative;
    }

    .right {
        background-color: cyan;
        float: right;
        position: relative;
        
    }
</style>

<div class="court">
    <div class="paddle left"
         style="top:@(leftTop)px" />

    <div class="paddle right"
         style="top:0px" />

    <BallSprite Sprite="@ballSprite" />
</div>

<button class="btn btn-primary" @onclick="LeftUp">Up</button>
<button class="btn btn-primary" @onclick="LeftDown">Down</button>

@code {
   
    private int leftTop = 0;

    private Sprite ballSprite = new Sprite
    {
        Box = new Box { 
            Top = 200,
            Left = 300,
            Height = 25,
            Width = 25
        },
        Direction = 90,
        Speed = 5
    };


    private void LeftUp()
    {
        leftTop -= 10;

    }
    private void LeftDown()
    {
        leftTop += 10;

    }

    // get ot know your component lifecycle : 
    // https://docs.microsoft.com/en-us/aspnet/core/blazor/lifecycle?view=aspnetcore-3.1
    //
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            // set up the game loop
            Timer _timer = new Timer(
                callback: ballSprite.Update,
                state: ballSprite,
                dueTime: 1000,  // first check
                period: 500);  // all other checks
        }
    }

}