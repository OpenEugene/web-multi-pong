@page "/pong-component"

<h1>Pong with Ball</h1>

<style>

    .paddle {
        width: 25px;
        height: 100px;
    }

    .court {
        background-color: black;
        width: 600px;
        height: 400px;
    }

    .left {
        background-color: crimson;
        float: left;
        position: relative;
        left: 10;
    }

    .right {
        background-color: cyan;
        float: right;
        position: relative;
        left: 720;
    }
</style>

<div class="court">
    <div class="paddle left"
         style="top:@(leftTop)px" />

    <div class="paddle right"
         style="top:0px" />

    <Ball Top="@ballTop" Left="@ballLeft" />
</div>

<button class="btn btn-primary" @onclick="LeftUp">Up</button>
<button class="btn btn-primary" @onclick="LeftDown">Down</button>

@code {
    private int currentCount = 0;
    private int leftTop = 0;
    private int ballLeft = 300;
    private int ballTop = 200;

   
    private void LeftUp()
    {
        leftTop -= 10;

    }
    private void LeftDown()
    {
        leftTop += 10;

    }

    protected override async Task OnInitializedAsync()
    {
      
        // set up the game loop
        Timer _timer = new Timer(
            callback: Update,
            state: null,
            dueTime: 1000,  // first check
            period: 500);  // all other checks
    }

    private void Update(object timerState)
    {
        InvokeAsync(() =>  // threading dispatch wrapper
        {
            ballLeft-=5;
            StateHasChanged();
        });
    }
}