@using System.IO
<style>

    .paddle@(Sprite.Id) { 
        top: @(Sprite.Box.Top)px;
        left: @(Sprite.Box.Left)px;
        height: @(Sprite.Box.Height)px;
        width: @(Sprite.Box.Width)px;
        position: absolute;
    }

 </style>

<div class="paddle@(Sprite.Id) @Class" />

@code {


    [Parameter]
    public Sprite Sprite { get ; set ; }

    [Parameter]
    public String Class { get ; set ; }

    // get ot know your component lifecycle : 
    // https://docs.microsoft.com/en-us/aspnet/core/blazor/lifecycle?view=aspnetcore-3.1
    //

    protected override void OnParametersSet()
    {

        // init the timer update event
        Sprite.Render += (sender, args) => 
        {

            InvokeAsync(() => // threading dispatch wrapper
            {
                StateHasChanged();
            });
        };

        Sprite.OutOfBounds = (bounds) =>
        {
            //just stop
            Sprite.Speed = 0;

            // get back in bounds
            if (Sprite.Box.Top < bounds.Top) Sprite.Box.Top = bounds.Top;
            if (Sprite.Box.Bottom > bounds.Bottom) Sprite.Box.Top = bounds.Bottom-Sprite.Box.Height;

        };

    }
}
